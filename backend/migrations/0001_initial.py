# Generated by Django 4.1.7 on 2023-02-24 12:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('price', models.PositiveSmallIntegerField(verbose_name='Цена')),
                ('max_month_requests', models.PositiveSmallIntegerField(verbose_name='Максимум заявок в месяц')),
                ('max_response_time', models.PositiveSmallIntegerField(verbose_name='Время рассмотрения заявки(в часах)')),
                ('extra', models.CharField(blank=True, max_length=350, verbose_name='Дополнительные возможности')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(max_length=50, unique=True, verbose_name='Телеграм идентификатор')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='Имя')),
                ('type', models.CharField(choices=[('employer', 'Заказчик'), ('freelancer', 'Фрилансер')], max_length=20, verbose_name='Тип пользователя')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.user')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
            },
            bases=('backend.user',),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.user')),
            ],
            options={
                'verbose_name': 'Исполнитель',
                'verbose_name_plural': 'Исполнители',
            },
            bases=('backend.user',),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_requests', models.PositiveSmallIntegerField(default=0, verbose_name='Количество заявок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='backend.tariff', verbose_name='Тариф')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='backend.customer', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание заказа')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='backend.customer', verbose_name='Заказчик')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requests', to='backend.worker', verbose_name='Исполнитель')),
            ],
        ),
    ]
