import textwrap

from django.conf import settings
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, LabeledPrice
from telegram.ext import ContextTypes

from . import start_tg_bot
from backend.models import User, Subscription


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE, user) -> int:
    try:
        user = await User.objects.aget(id=user.id)
    except User.DoesNotExist:
        reply_text = textwrap.dedent('''
        –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –≤–∞—Å —É —Å–µ–±—è.\n\n
        –ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∑–∞–∫–∞–∑—á–∏–∫–æ–º, –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.
        –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:
        ''')

        reply_markup = []

        async for subscription in Subscription.objects.all():
            reply_text += textwrap.dedent(f'''
            {subscription.title} - {subscription.price}‚ÇΩ –≤ –º–µ—Å—è—Ü \n
            –ú–∞–∫—Å–∏–º—É–º –∑–∞—è–≤–æ–∫ –≤ –º–µ—Å—è—Ü: {subscription.max_month_requests}
            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–∫–∏: {subscription.max_response_time}—á.\n
            ''')
            if subscription.extra:
                reply_text += f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {subscription.extra}\n\n"

            reply_markup.append(
                [InlineKeyboardButton(subscription.title, callback_data=subscription.id)]
            )

        reply_markup.append(
            [InlineKeyboardButton("–ù–∞–∑–∞–¥üîô", callback_data="back")],
        )

        await update.message.reply_text(
            reply_text,
            reply_markup=InlineKeyboardMarkup(reply_markup)
        )
        return start_tg_bot.HANDLE_USER_NOT_FOUND


async def precheckout_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.pre_checkout_query

    if query.invoice_payload != "Subscription-Payload":
        await query.answer(ok=False, error_message="Something went wrong...")
    else:
        await query.answer(ok=True)


async def successful_payment_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞.")
    return